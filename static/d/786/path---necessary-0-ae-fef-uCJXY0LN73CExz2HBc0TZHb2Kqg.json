{"data":{"markdownRemark":{"html":"<h2>Skip navigation</h2>\n<p>You can imagine if you were going through a website and have to go through the menu everytime, you would get frustrated. That's why we put in \"Skip the navigation and go straight to the main content\" link. This link should be on the first tab on the page. Some site have nice animation on tab, that it scrolls in and all users can see what the link is for.</p>\n<h2>Ensure that all interactive elements are keyboard accessible.</h2>\n<p>Always....ALWAYS think about the users that use keyboard to navigate the page. They are more of them then you relize. Keep this in mind when you are developing the navigation, don't have any mouse over information that you can't access through the keyboard, accordions, media player...</p>\n<p>Use <code>tabindex=0</code> to add an element that does not normally receive focus, such as <code>&#x3C;div></code>or <code>&#x3C;span></code>, into the navigation order when it is being used for interaction. Use scripting to capture and respond to keyboard events.</p>\n<h2>Page language</h2>\n<p>Indicate the primary language of every page by suing the <code>lang</code>attribute in the <code>html</code> tag, for example <code>&#x3C;html lang=\"en\"></code>. This is important for users that use google translate. The translation does not work if this is marked wrong.</p>\n<h2>Write code that adapts to the user's technology</h2>\n<p>Keep in mind that some users have to blow up the size of the text to 200%, then it's our job that we don't have horizontal scroll and we have to prevent any clipping of content. Use progressive enhancement to help ensure that core functionality and content is available regardless of technology being used.</p>\n<h2>Avoid CAPTCHA where possible.</h2>\n<p>Captcha create problems for many people. There are other means of verifying that user input was generated by a human that are easier to use, such as automatic detection or interface interactions. If CAPTCHA really needs to be included, ensure that it is simple to understand and includes alternatives for users with disabilities,such as :</p>\n<ul>\n<li>Providing more than two ways to solve the CAPTCHA</li>\n<li>Providing access to a human representative who can bypass CAPTCHA</li>\n<li>Not requireing CAPTHAs for authorized users.</li>\n</ul>","frontmatter":{"path":"/necessary","title":"Necessary stuff"}},"allMarkdownRemark":{"edges":[{"node":{"id":"9d83eb8c-14a3-54a7-b1c6-1910b01704d9","excerpt":"We, the developers, are always trying to write clean code and keep in mind that other developers will have to read through our code, understand it and able to work in it. We write documentation, we carefully choose our variable names to make it clear…","frontmatter":{"date":"10","path":"/intro","title":"Intro"}}},{"node":{"id":"2bc8adf7-44fc-5906-b2fe-8cf5d7032162","excerpt":"Skip navigation You can imagine if you were going through a website and have to go through the menu everytime, you would get frustrated. That's why we put in \"Skip the navigation and go straight to the main content\" link. This link should be on the…","frontmatter":{"date":"15","path":"/necessary","title":"Necessary stuff"}}},{"node":{"id":"b40dcce8-4af6-5af2-b1b5-2c959138f616","excerpt":"Labels and inputs: Well we have to connect the label to the input for screen readers and error messages. To do that you simply add a  for attribute to the  <label>  element and add the same one to the  <input>  element. Even if you don't want to show…","frontmatter":{"date":"20","path":"/forms","title":"Forms"}}},{"node":{"id":"ed559586-875e-54e4-93b7-c3ea551c4d2a","excerpt":"alt tag Same old same old, but I think even the best developers miss this step. It's important for screen readers and people that use them to have a descriptive text to get the same experience as other users. If it's a decorative image then have it…","frontmatter":{"date":"30'","path":"/images","title":"Images"}}},{"node":{"id":"ccc937f2-dcb7-5447-b916-ebd264917fd2","excerpt":"'target= \" _ blank\"` To my surprise, screen readers don't give the information that links are  target=\"_blank\" . The user has no idea what happens if he clicks it. According to this article  https://thatdevgirl.com/blog/before-after-accessibility  we…","frontmatter":{"date":"40","path":"/links","title":"Links"}}},{"node":{"id":"c61b8811-51bd-5615-b250-cdd9ed8fce5f","excerpt":"Few things to keep in mind : If the modal is not open, it should not be rendered in the DOM Try to set the modal at the and of  body . If you are using React you can use React Portals to append the modal to the end of  body Go over the WAI-ARIA…","frontmatter":{"date":"50","path":"/modal","title":"Modal dialog"}}},{"node":{"id":"50172349-1783-5086-a3a7-b16252e416dd","excerpt":"Header cells Header cells must be marked with  <th> , and data cells with  <td>  to make tables accessible. For more complex tables, explicit associations may be needed using  scope ,  id and  headers attributes.\n https://www.w3.org/WAI/tutorials…","frontmatter":{"date":"70","path":"/tables","title":"Tables"}}}]}},"pageContext":{}}