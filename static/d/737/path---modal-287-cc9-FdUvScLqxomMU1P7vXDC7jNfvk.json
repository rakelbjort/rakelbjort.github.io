{"data":{"markdownRemark":{"html":"<p>Few things to keep in mind :</p>\n<ul>\n<li>If the modal is not open, it should not be rendered in the DOM</li>\n<li>Try to set the modal at the and of <code>body</code>. If you are using React you can use React Portals to append the modal to the end of <code>body</code></li>\n<li>Go over the WAI-ARIA attrubutes</li>\n<li>If the user presses the escape button while the modal is ope, it closes it</li>\n<li>Clicking outside the modal, closes the modal.</li>\n<li>When the user opens the modal, the user can't scroll</li>\n<li>When the user opens the modal the focus goes straight to the modal's close button?</li>\n<li>Focus stays within the modal while the modal is open. That means the user can't tab pass the modal window to the body.</li>\n</ul>","frontmatter":{"path":"/modal","title":"Modal dialog"}},"allMarkdownRemark":{"edges":[{"node":{"id":"9d83eb8c-14a3-54a7-b1c6-1910b01704d9","excerpt":"We, the developers, who are always trying to write clean code and keep in mind that other developers will have to read through our code, have to understand it and able to work in it. We write documentation, we carefully choose our variable names to…","frontmatter":{"date":"10","path":"/intro","title":"Intro"}}},{"node":{"id":"2bc8adf7-44fc-5906-b2fe-8cf5d7032162","excerpt":"Skip navigation You can imagine if you were going through a website and have to go through the menu everytime, you would get frustrated. That's why we put in \"Skip the navigation and go straight to the main content\" link. This link should be on the…","frontmatter":{"date":"15","path":"/necessary","title":"Necessary"}}},{"node":{"id":"b40dcce8-4af6-5af2-b1b5-2c959138f616","excerpt":"Labels and inputs: Well we have to connect the label to the input for screen readers and error messages. To do that you simply add a  for attribute to the  <label>  element and add the same one to the  <input>  element. Even if you don't want to show…","frontmatter":{"date":"20","path":"/forms","title":"Forms"}}},{"node":{"id":"ed559586-875e-54e4-93b7-c3ea551c4d2a","excerpt":"alt tag Same old same old, but I think even the best developers miss this step. It's important for screen readers and people that use them to have a descriptive text to get the same experience as other users. If it's a decorative image then have it…","frontmatter":{"date":"30'","path":"/images","title":"Images"}}},{"node":{"id":"ccc937f2-dcb7-5447-b916-ebd264917fd2","excerpt":"'target= \" _ blank\"` To my surprise, screen readers don't give the information that links are  target=\"_blank\" . The user has no idea what happens if he clicks it. According to this article  https://thatdevgirl.com/blog/before-after-accessibility  we…","frontmatter":{"date":"40","path":"/links","title":"Links"}}},{"node":{"id":"c61b8811-51bd-5615-b250-cdd9ed8fce5f","excerpt":"Few things to keep in mind : If the modal is not open, it should not be rendered in the DOM Try to set the modal at the and of  body . If you are using React you can use React Portals to append the modal to the end of  body Go over the WAI-ARIA…","frontmatter":{"date":"50","path":"/modal","title":"Modal dialog"}}},{"node":{"id":"50172349-1783-5086-a3a7-b16252e416dd","excerpt":"Header cells Header cells must be marked with  <th> , and data cells with  <td>  to make tables accessible. For more complex tables, explicit associations may be needed using  scope ,  id and  headers attributes.\n https://www.w3.org/WAI/tutorials…","frontmatter":{"date":"70","path":"/tables","title":"Tables"}}}]}},"pageContext":{}}