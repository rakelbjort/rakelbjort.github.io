{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SidebarNavigation/index.js","webpack:///./src/components/Header/index.js","webpack:///./src/templates/Layout/index.js","webpack:///./src/components/PostLink/index.js"],"names":["__webpack_exports__","_ref","Posts","data","allMarkdownRemark","edges","filter","edge","node","frontmatter","date","map","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_PostLink__WEBPACK_IMPORTED_MODULE_3__","key","id","post","_templates_Layout__WEBPACK_IMPORTED_MODULE_4__","links","pageQuery","__webpack_require__","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","object","string","isRequired","func","m","module","exports","default","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","Object","assign","json","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","src_components_SidebarNavigation","console","log","this","react_default","className","item","gatsby_browser_entry","to","path","title","react","src_components_Header","siteTitle","Layout_Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","_755544856","prop_types_default","gatsby__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-index-js-65c14b344be7e2388544.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport PostLink from '../components/PostLink'\nimport Layout from '../templates/Layout'\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n\n  return <Layout links={Posts}>hi</Layout>\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    key: location.pathname,\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\n\nimport './index.scss'\n\nclass SidebarNavigation extends Component {\n  render() {\n    console.log(this.props.data)\n    return (\n      <aside>\n        <nav className=\"sidebar-navigation\">\n          {this.props.data.map(item => (\n            <Link\n              key={item.props.post.frontmatter}\n              className=\"sidebar-link\"\n              to={\n                item.props.post.frontmatter.path\n                  ? item.props.post.frontmatter.path\n                  : '/'\n              }\n            >\n              {item.props.post.frontmatter.title}\n            </Link>\n          ))}\n        </nav>\n      </aside>\n    )\n  }\n}\n\nexport default SidebarNavigation\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport './index.scss'\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navigation-main\">\n    <Link className=\"navigation-link\" to=\"/\">\n      Home\n    </Link>\n    <Link className=\"navigation-link\" to=\"/my-first-post\">\n      Docs\n    </Link>\n    <Link className=\"navigation-link\" to=\"/\">\n      About\n    </Link>\n  </nav>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport SidebarNavigation from '../../components/SidebarNavigation'\nimport Header from '../../components/Header'\nimport './index.scss'\n\nconst Layout = ({ children, links }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className=\"container\">\n          <SidebarNavigation data={links} />\n          <div className=\"main-content\">{children}</div>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst PostLink = ({ post }) => (\n  <div>\n    <Link to={post.frontmatter.path}>{post.frontmatter.title}</Link>\n  </div>\n)\n\nexport default PostLink\n"],"sourceRoot":""}