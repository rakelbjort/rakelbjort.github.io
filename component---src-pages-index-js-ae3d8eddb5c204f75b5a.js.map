{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SidebarNavigation/index.js","webpack:///./src/components/Header/index.js","webpack:///./src/templates/Layout/index.js","webpack:///./src/components/PostLink/index.js"],"names":["__webpack_exports__","_ref","Posts","data","allMarkdownRemark","edges","filter","edge","node","frontmatter","date","map","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_PostLink__WEBPACK_IMPORTED_MODULE_3__","key","id","post","_templates_Layout__WEBPACK_IMPORTED_MODULE_4__","links","className","pageQuery","__webpack_require__","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","object","string","isRequired","func","m","module","exports","default","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","Object","assign","json","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","src_components_SidebarNavigation","react_default","this","item","gatsby_browser_entry","path","to","title","react","src_components_Header","siteTitle","Layout_Layout","Fragment","href","Helmet_default","site","siteMetadata","meta","name","content","lang","_755544856","prop_types_default","gatsby__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-index-js-ae3d8eddb5c204f75b5a.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport PostLink from '../components/PostLink'\nimport Layout from '../templates/Layout'\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n\n  return (\n    <Layout links={Posts}>\n      <h1 className=\"page-title\">Lets make accessibility an easy practice</h1>\n      <p>So we can make awesome accessible websites!</p>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    key: location.pathname,\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\n\nimport './index.scss'\n\nclass SidebarNavigation extends Component {\n  render() {\n    return (\n      <aside>\n        <nav className=\"sidebar-navigation\">\n          <h1>Table of contents</h1>\n          {this.props.data &&\n            this.props.data.map(item => (\n              <Link\n                key={item.props.post.frontmatter.path}\n                className=\"sidebar-link\"\n                to={item.props.post.frontmatter.path}\n              >\n                {item.props.post.frontmatter.title}\n              </Link>\n            ))}\n        </nav>\n      </aside>\n    )\n  }\n}\n\nexport default SidebarNavigation\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport './index.scss'\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navigation-main\">\n    <Link className=\"navigation-link\" to=\"/\">\n      Home\n    </Link>\n    <Link className=\"navigation-link\" to=\"/my-first-post\">\n      Docs\n    </Link>\n    <Link className=\"navigation-link\" to=\"/\">\n      About\n    </Link>\n  </nav>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport SidebarNavigation from '../../components/SidebarNavigation'\nimport Header from '../../components/Header'\nimport './index.scss'\n\nconst Layout = ({ children, links }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <a href=\"#main-content\" className=\"skip-to-content\">\n          Skip to the navigation\n        </a>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className=\"container\">\n          <SidebarNavigation data={links} />\n          <div className=\"main-content\" id=\"main-content\">\n            {children}\n          </div>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst PostLink = ({ post }) => (\n  <div>\n    <Link to={post.frontmatter.path}>{post.frontmatter.title}</Link>\n  </div>\n)\n\nexport default PostLink\n"],"sourceRoot":""}